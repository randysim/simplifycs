// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// For accounts pending verification
model Verify {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  email String @unique

  verificationKey String

  // When the verification expires
  verificationExpirationTime DateTime
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  email    String @unique
  username String @unique

  firstName String
  lastName  String

  passwordHashed String
  authToken      String @unique

  admin Boolean @default(false)
}

model Course {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title       String @unique
  description String

  // will be in chronological order
  units Unit[]
}

model Unit {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title       String @unique
  description String

  // will be in chronological order
  lessons  Lesson[]
  Course   Course?  @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId String?
}

model Lesson {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title      String

  // will be in chronological order
  activities Activity[]

  Unit       Unit?      @relation(fields: [unitId], references: [id], onDelete: Cascade)
  unitId     String?
}

model Activity {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  itemId String @unique
  model  String

  Lesson   Lesson? @relation(fields: [lessonId], references: [id])
  lessonId String?
}

model Article {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title  String @unique
  author String

  content String @default("[]")

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Quiz {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title  String
  author String

  content String @default("[]")

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Assignment {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title  String
  author String

  prompt   String
  skeleton String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
